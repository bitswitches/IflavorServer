swagger: "2.0"
info:
  description: "iFlavor用API"
  version: "2.0.0"
  title: "iFlavorAPI"
  
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "会員情報登録"
      description: ""
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
  /user/{user_id}:
    get:
      tags:
      - "user"
      summary: "会員情報取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            type: "array"
            items:
              $ref: "#/definitions/user"
    delete:
      tags:
      - "user"
      summary: "会員情報削除"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user_id"
        description: ""
        type: "integer"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "id is invalid"
    put:
      tags:
      - "user"
      summary: "会員情報更新"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in:  "path"
        name: "user_id"
        description: ""
        required: true
        type: "integer"
      - in: "body"
        name: "user_info"
        description: "会員情報を変更"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
  /order:
    get:
      tags:
      - "order"
      summary: "商品購入情報一覧取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            type: "array"
            items:
              $ref: "#/definitions/order"
    post:
      tags:
      - "order"
      summary: "商品購入"
      description: ""
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/order"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
  /order/{order_id}:
    get:
      tags:
      - "order"
      summary: "指定した商品購入情報取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/order"
    delete:
      tags:
      - "order"
      summary: "商品購入情報削除"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "order_id"
        description: ""
        type: "integer"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "id is invalid"
    put:
      tags:
      - "order"
      summary: "商品購入情報更新"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in:  "path"
        name: "order_id"
        description: ""
        required: true
        type: "integer"
      - in: "body"
        name: "product purchase info"
        description: "商品購入情報を変更"
        required: true
        schema:
          $ref: "#/definitions/order"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
  /item:
    post:
      tags:
      - "item"
      summary: "商品登録"
      description: ""
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/item"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
    get:
      tags:
      - "item"
      summary: "全商品情報取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            type: "array"
            items:
              $ref: "#/definitions/item"
  /item/{item_id}:
    get:
      tags:
      - "item"
      summary: "商品情報取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/item"
    delete:
      tags:
      - "item"
      summary: "商品情報削除"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "item_id"
        description: ""
        type: "integer"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "id is invalid"
    put:
      tags:
      - "item"
      summary: "商品情報更新"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in:  "path"
        name: "item_id"
        description: ""
        required: true
        type: "integer"
      - in: "body"
        name: "item_info"
        description: "商品情報を変更"
        required: true
        schema:
          $ref: "#/definitions/item"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
  /history:
    post:
      tags:
      - "history"
      summary: "購入履歴登録"
      description: ""
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "history_info"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/history"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
    get:
      tags:
      - "history"
      summary: "全購入履歴情報取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            type: "array"
            items:
              $ref: "#/definitions/history"
  /history/{history_id}:
    get:
      tags:
      - "history"
      summary: "特定の購入履歴取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/history"
    delete:
      tags:
      - "history"
      summary: "特定の購入履歴情報削除"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "history_id"
        description: ""
        type: "integer"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "id is invalid"
    put:
      tags:
      - "history"
      summary: "購入履歴情報更新"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in:  "path"
        name: "history_id"
        description: ""
        required: true
        type: "integer"
      - in: "body"
        name: "history_info"
        description: "購入履歴情報を変更"
        required: true
        schema:
          $ref: "#/definitions/history"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
  /belongings:
    post:
      tags:
      - "belongings"
      summary: "所持香水情報登録"
      description: ""
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "belongings_info"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/belongings"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
    get:
      tags:
      - "belongings"
      summary: "全所持香水情報取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            type: "array"
            items:
              $ref: "#/definitions/belongings"
  /belongings/{belongings_id}:
    get:
      tags:
      - "belongings"
      summary: "特定の所持香水情報取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/belongings"
    delete:
      tags:
      - "belongings"
      summary: "特定の所持香水情報削除"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "belongings_id"
        description: ""
        type: "integer"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "id is invalid"
    put:
      tags:
      - "belongings"
      summary: "所持香水情報更新"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in:  "path"
        name: "belongings_id"
        description: ""
        required: true
        type: "integer"
      - in: "body"
        name: "history_info"
        description: "所持香水情報を変更"
        required: true
        schema:
          $ref: "#/definitions/belongings"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
  /situation:
    post:
      tags:
      - "situation"
      summary: "シチュエーション情報登録"
      description: ""
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "situation_info"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/situation"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
    get:
      tags:
      - "situation"
      summary: "全シチュエーション情報取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            type: "array"
            items:
              $ref: "#/definitions/situation"
  /situation/{situation_id}:
    get:
      tags:
      - "situation"
      summary: "特定のシチュエーション情報取得"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/situation"
    delete:
      tags:
      - "situation"
      summary: "特定のシチュエーション情報削除"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "situation_id"
        description: ""
        type: "integer"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "id is invalid"
    put:
      tags:
      - "situation"
      summary: "シチュエーション情報更新"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in:  "path"
        name: "situation_id"
        description: ""
        required: true
        type: "integer"
      - in: "body"
        name: "situation_info"
        description: "シチュエーション情報を変更"
        required: true
        schema:
          $ref: "#/definitions/situation"
      responses:
        200:
          description: "successful operation"
        400:
          description: "parameter is invalid"
definitions:
  order:
    type: "object"
    properties:
      order_id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      item_id:
        type: "integer"
        format: "int64"
      item_count:
        type: "integer"
        format: "int64"
      payment:
        type: "integer"
        format: "int64"
  user:
    type: "object"
    properties:
      user_id:
        type: "integer"
        format: "int64"
      user_name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      sex:
        type: "boolean"
      age:
        type: "integer"
        format: "int64"
      address:
        type: "string"
      create_time:
        type: "number"
      update_time:
        type: "number"
  item:
    type: "object"
    properties:
      item_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      price:
        type: "integer"
        format: "int64"
      history_item_id:
        type: "integer"
        format: "int64"
  history:
    type: "object"
    properties:
      history_id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      item_id:
        type: "integer"
        format: "int64"
      count:
        type: "integer"
        format: "int64"
      ratio:
        type: "integer"
        format: "int64"
      time:
        type: "number"
      user_user_id:
        type: "integer"
        format: "int64"
  belongings:
    type: "object"
    properties:
      belongings_id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      count:
        type: "integer"
        format: "int64"
      item_id:
        type: "integer"
        format: "int64"
  situation:
    type: "object"
    properties:
      situation_id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      item_id:
        type: "integer"
        format: "int64"
      execute_time:
        type: "number"
      repeat:
        type: "boolean"
      situation:
        type: "string"
      geo:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"